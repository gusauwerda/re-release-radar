service: re-release-radar
provider:
  name: aws
  runtime: python3.10
  stage: dev
  region: ap-southeast-2
  memorySize: 128
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: ${file(./config/config.${opt:stage, 'dev'}.json):USERS_TABLE}
plugins:
  - serverless-wsgi
  - serverless-python-requirements
custom:
  wsgi:
    app: app.app
    packRequirements: false
functions:
  cronRefreshPlaylist:
    handler: app.auto_refresh_playlist
    timeout: 60
    environment:
      SPOTIPY_CLIENT_ID: ${file(./config/config.${opt:stage, 'dev'}.json):SPOTIPY_CLIENT_ID}
      SPOTIPY_CLIENT_SECRET: ${file(./config/config.${opt:stage, 'dev'}.json):SPOTIPY_CLIENT_SECRET}
      SPOTIPY_REDIRECT_URI: ${file(./config/config.${opt:stage, 'dev'}.json):SPOTIPY_REDIRECT_URI}
      FLASK_CONFIG: ${file(./config/config.${opt:stage, 'dev'}.json):FLASK_CONFIG}
      FLASK_APP: ${file(./config/config.${opt:stage, 'dev'}.json):FLASK_APP}
      STAGE: ${file(./config/config.${opt:stage, 'dev'}.json):STAGE}
      SESSION_SECRET_KEY: ${file(./config/config.${opt:stage, 'dev'}.json):SESSION_SECRET_KEY}
      REQUIRED_SCOPES: ${file(./config/config.${opt:stage, 'dev'}.json):REQUIRED_SCOPES}
      SERVER: ${file(./config/config.${opt:stage, 'dev'}.json):SERVER}
    events:
      - schedule: rate(2 minutes)
  app:
    handler: "wsgi_handler.handler"
    timeout: 60
    environment:
      SPOTIPY_CLIENT_ID: ${file(./config/config.${opt:stage, 'dev'}.json):SPOTIPY_CLIENT_ID}
      SPOTIPY_CLIENT_SECRET: ${file(./config/config.${opt:stage, 'dev'}.json):SPOTIPY_CLIENT_SECRET}
      SPOTIPY_REDIRECT_URI: ${file(./config/config.${opt:stage, 'dev'}.json):SPOTIPY_REDIRECT_URI}
      FLASK_CONFIG: ${file(./config/config.${opt:stage, 'dev'}.json):FLASK_CONFIG}
      FLASK_APP: ${file(./config/config.${opt:stage, 'dev'}.json):FLASK_APP}
      STAGE: ${file(./config/config.${opt:stage, 'dev'}.json):STAGE}
      SESSION_SECRET_KEY: ${file(./config/config.${opt:stage, 'dev'}.json):SESSION_SECRET_KEY}
      REQUIRED_SCOPES: ${file(./config/config.${opt:stage, 'dev'}.json):REQUIRED_SCOPES}
      SERVER: ${file(./config/config.${opt:stage, 'dev'}.json):SERVER}
    events:
      - http: ANY /
      - http: "ANY {proxy+}"
resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${file(./config/config.${opt:stage, 'dev'}.json):USERS_TABLE}
